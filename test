from unittest.mock import patch

import composeml as cp
import dateutil
import numpy as np
import pandas as pd
import pytest
from dask import dataframe as dd
from woodwork.column_schema import ColumnSchema
from woodwork.logical_types import NaturalLanguage

from featuretools.computational_backends.calculate_feature_matrix import (
    FEATURE_CALCULATION_PERCENTAGE,
)
from featuretools.entityset import EntitySet, Timedelta
from featuretools.exceptions import UnusedPrimitiveWarning
from featuretools.primitives import GreaterThanScalar, Max, Mean, Min, Sum
from featuretools.primitives.base import AggregationPrimitive, TransformPrimitive
from featuretools.synthesis import dfs
from featuretools.synthesis.deep_feature_synthesis import DeepFeatureSynthesis
from featuretools.tests.testing_utils import to_pandas
from featuretools.utils.gen_utils import Library


cards_df = pd.DataFrame({"id": [1, 2, 3, 4, 5]})
transactions_df = pd.DataFrame(
    {
        "id": [1, 2, 3, 4, 5],
        "card_id": [1, 1, 5, 1, 5],
        "transaction_time": pd.to_datetime(
            [
                "2011-2-28 04:00",
                "2012-2-28 05:00",
                "2012-2-29 06:00",
                "2012-3-1 08:00",
                "2014-4-1 10:00",
            ]
        ),
        "fraud": [True, False, False, False, True],
    }
)

datetime_es = EntitySet(id="fraud_data")
datetime_es = datetime_es.add_dataframe(
    dataframe_name="transactions",
    dataframe=transactions_df,
    index="id",
    time_index="transaction_time",
)

datetime_es = datetime_es.add_dataframe(
    dataframe_name="cards", dataframe=cards_df, index="id"
)

datetime_es = datetime_es.add_relationship("cards", "id", "transactions", "card_id")
datetime_es.add_last_time_indexes()

_, _ = dfs(
            entityset=datetime_es,
            target_dataframe_name="transactions",
            cutoff_time="2000000000-----0000000000000000000000000000000000-3-31 04:00",
            training_window=pd.DateOffset(months=2),
        )