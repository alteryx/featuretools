version: 2.1

orbs:
  windows: circleci/windows@2.0.0

executors:
  python:
    parameters:
      image_tag:
        type: string
        default: "3.7-stretch"
    docker:
      - image: circleci/python:<< parameters.image_tag >>

commands:
  package_featuretools:
    steps:
      - run: |
          python setup.py sdist
          FT_VERSION=$(python setup.py --version)
          tar -zxvf "dist/featuretools-${FT_VERSION}.tar.gz"
          mv "featuretools-${FT_VERSION}" unpacked_sdist

jobs:
  win_unit_tests:
    working_directory: C:/featuretools
    parameters:
      python_version:
        type: string
        default: "3.7"
      miniconda_pkg_name:
        type: string
        default: "Miniconda3-4.7.12.1-Windows-x86_64.exe"
      miniconda_hash:
        type: string
        default: "f18060cc0bb50ae75e4d602b7ce35197c8e31e81288d069b758594f1bb46ab45"
    executor:
      name: windows/default
    steps:
      - checkout
      - run:
          name: Download Miniconda
          command: |
              $File = "./<< parameters.miniconda_pkg_name >>"
              $Uri = "https://repo.anaconda.com/miniconda/<< parameters.miniconda_pkg_name >>"
              $ProgressPreference = "silentlyContinue"
              Invoke-WebRequest -Uri $Uri -Outfile $File
              $hashFromFile = Get-FileHash "$file" -Algorithm SHA256
              $hashFromUrl = "<< parameters.miniconda_hash >>"
              if ($hashFromFile.Hash -ne "$hashFromUrl") {
                Throw "File hashes did not match!"
              }
      - run:
          name: Install Miniconda
          command: start /wait C:\featuretools\\<< parameters.miniconda_pkg_name >> /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\Miniconda3
          shell: cmd.exe
      - run:
          name: Create New Python Environment
          command: |
              C:\Users\circleci\Miniconda3\shell\condabin\conda-hook.ps1
              conda create -n featuretools python=<< parameters.python_version >>
      - run:
          name: Install Graphviz
          command: |
              C:\Users\circleci\Miniconda3\shell\condabin\conda-hook.ps1
              conda activate featuretools
              conda config --add channels conda-forge
              conda install python-graphviz -q -y
      - run:
          name: Install Featuretools
          command: |
              C:\Users\circleci\Miniconda3\shell\condabin\conda-hook.ps1
              conda activate featuretools
              python -m pip install --upgrade pip
              python -m pip install .
              python -m pip install -r test-requirements.txt
      - run:
          name: Run Unit Tests
          command: |
              C:\Users\circleci\Miniconda3\shell\condabin\conda-hook.ps1
              conda activate featuretools
              pytest featuretools\ -n 2
  install_ft:
    working_directory: ~/featuretools
    parameters:
      image_tag:
        type: string
        default: "3.7-stretch"
    executor:
      name: python
      image_tag: << parameters.image_tag >>
    steps:
      - checkout
      - attach_workspace:
          at: ~/featuretools
      - package_featuretools
      - run : |
          virtualenv venv
          source venv/bin/activate
          pip config --site set global.progress_bar off
          pip install -e unpacked_sdist/
          pip install -r unpacked_sdist/test-requirements.txt
      - persist_to_workspace:
          root: ~/featuretools
          paths:
            - venv
            - unpacked_sdist
  run_premium_primitives_tests_on_master:
    docker:
      - image: circleci/buildpack-deps:curl
    steps:
      - run:
          name: "Trigger premium primitives tests for python 3.5"
          command: "curl -u ${PP_K}: -d build_parameters[CIRCLE_JOB]=python-35 https://circleci.com/api/v1.1/project/github/FeatureLabs/premium-primitives/tree/master"
  run_premium_primitives_tests_on_release:
    docker:
      - image: circleci/buildpack-deps:curl
    steps:
      - run:
          name: "Trigger premium primitives tests for python 3.5 release"
          command: "curl -u ${PP_K}: -d build_parameters[CIRCLE_JOB]=python-35-ft-release https://circleci.com/api/v1.1/project/github/FeatureLabs/premium-primitives/tree/master"

  unit_tests:
    working_directory: ~/featuretools
    parameters:
      image_tag:
        type: string
        default: "3.7-stretch"
      codecov:
        type: boolean
        default: false
    executor:
      name: python
      image_tag: << parameters.image_tag >>
    steps:
      - run: sudo apt update && sudo apt install -y graphviz
      - checkout
      - attach_workspace:
          at: ~/featuretools
      - when:
          condition: << parameters.codecov >>
          steps:
            - run: |
                source venv/bin/activate
                pip install "$(cat dev-requirements.txt | grep codecov)"
                coverage erase
                cd unpacked_sdist/
                coverage erase
                pytest featuretools/ -n 2 --cov=featuretools --cov-config=../.coveragerc
                cd ../
                cp unpacked_sdist/.coverage .coverage
                codecov
      - unless:
          condition: << parameters.codecov >>
          steps:
            - run: |
                source venv/bin/activate
                cd unpacked_sdist
                pytest featuretools/ -n 2

  lint_test:
    working_directory: ~/featuretools
    parameters:
      image_tag:
        type: string
        default: "3.7-stretch"
    executor:
      name: python
      image_tag: << parameters.image_tag >>
    steps:
      - checkout
      - attach_workspace:
          at: ~/featuretools
      - run: |
          source venv/bin/activate
          pip install -r unpacked_sdist/dev-requirements.txt
      - run: source venv/bin/activate && make lint

  build_docs:
    working_directory: ~/featuretools
    docker:
      - image: circleci/python:3.7-stretch
    steps:
      - run: sudo apt update && sudo apt install -y pandoc
      - run: sudo apt install -y graphviz
      - checkout
      - attach_workspace:
          at: ~/featuretools
      - run: |
          source venv/bin/activate
          pip install -r unpacked_sdist/dev-requirements.txt
      - run: |
          source venv/bin/activate
          make -C docs/ -e "SPHINXOPTS=-W" clean html

  install_ft_complete:
    working_directory: ~/featuretools
    parameters:
      image_tag:
        type: string
        default: "3.7-stretch"
    executor:
      name: python
      image_tag: << parameters.image_tag >>
    steps:
      - checkout
      - package_featuretools
      - run: |
          virtualenv venv
          source venv/bin/activate
          pip config --site set global.progress_bar off
          pip install -e unpacked_sdist/[complete]
      - run:
          command: |
            source venv/bin/activate
            python -c "import featuretools_tsfresh_primitives"
            python -c "import featuretools_update_checker"
            python -c "import categorical_encoding"
            python -c "import nlp_primitives"
            python -c "import autonormalize"
          environment:
            FEATURETOOLS_UPDATE_CHECKER: False

  changelog_updated:
    working_directory: ~/featuretools
    docker:
      - image: busybox:latest
    steps:
      - checkout
      - run: cat docs/source/changelog.rst | grep ":pr:\`${CIRCLE_PULL_REQUEST##https://github.com/FeatureLabs/featuretools/pull/}\`"

workflows:
  version: 2
  test_all_python_versions:
    jobs:
      - win_unit_tests:
          name: "py35 windows unit tests"
          python_version: "3.5"
      - win_unit_tests:
          name: "py36 windows unit tests"
          python_version: "3.6"
      - win_unit_tests:
          name: "py37 windows unit tests"
          python_version: "3.7"
      - install_ft:
          name: "py35 install featuretools"
          image_tag: "3.5"
      - install_ft:
          name: "py36 install featuretools"
          image_tag: "3.6"
      - install_ft:
          name: "py37 install featuretools"
      - unit_tests:
          name: "py35 unit tests"
          image_tag: "3.5"
          requires:
            - "py35 install featuretools"
      - unit_tests:
          name: "py36 unit tests"
          image_tag: "3.6"
          codecov: true
          requires:
            - "py36 install featuretools"
      - unit_tests:
          name: "py37 unit tests"
          requires:
            - "py37 install featuretools"
      - lint_test:
          name: "py35 lint test"
          image_tag: "3.5"
          requires:
            - "py35 install featuretools"
      - lint_test:
          name: "py36 lint test"
          image_tag: "3.6"
          requires:
            - "py36 install featuretools"
      - lint_test:
          name: "py37 lint test"
          requires:
            - "py37 install featuretools"
      - build_docs:
          name: "build docs"
          requires:
            - "py37 install featuretools"
      - install_ft_complete:
          name: "py35 install featuretools complete test"
          image_tag: "3.5"
      - install_ft_complete:
          name: "py36 install featuretools complete test"
          image_tag: "3.6"
      - install_ft_complete:
          name: "py37 install featuretools complete test"
      - changelog_updated:
          name: "changelog updated"
          filters:
            branches:
              ignore: /^master?/
      - run_premium_primitives_tests_on_master:
          name: "run premium primitives tests on master"
          filters:
            branches:
              only:
                - master
      - run_premium_primitives_tests_on_release:
          name: "run premium primitives tests on release"
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
