name: Release Notes Updated
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  release_notes_updated:
    name: release notes updated
    runs-on: ubuntu-latest
    steps:
      - name: Check for development branch
        id: branch
        shell: python
        run: |
          from re import compile
          main = '^main$'
          release = '^release_v\d+\.\d+\.\d+$'
          backport = '^backport_v\d+\.\d+\.\d+$'
          dep_update = '^latest-dep-update-[a-f0-9]{7}$'
          min_dep_update = '^min-dep-update-[a-f0-9]{7}$'
          regex = main, release, backport, dep_update, min_dep_update
          patterns = list(map(compile, regex))
          ref = "${{ github.event.pull_request.head.ref }}"
          is_dev = not any(pattern.match(ref) for pattern in patterns)
          print('::set-output name=is_dev::' + str(is_dev))
      - if: ${{ steps.branch.outputs.is_dev == 'true' }}
        name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - if: ${{ steps.branch.outputs.is_dev == 'true' }}
        name: Check if release notes were updated
        run: cat docs/source/release_notes.rst | grep ":pr:\`${{ github.event.number }}\`"
        
  lint_check:
    name: pull request check
    runs-on: ubuntu-latest
    steps:
      - name: check pull request branch name
        if: ${{ steps.check-linked-issues.outputs.linked_issues_count }}" != "0"
        id: branch
        shell: python
        run: |
          import re
          pull_request_branch_name = "${{ github.head_ref }}"
          regex_branch = r'OSSWW-\d+'
          match_pr = re.search(regex_branch, pull_request_branch_name)
          pull_request_body = "${{ github.event.pull_request.body }}"
          regex_body = '\d+'
          is_valid_branch_name = False
          if match_pr:
            print(f'pull request branch name contains OSSWW-{match_pr.group(0)}')
            print('::set-output name=is_valid_branch_name::' + str(is_valid_branch_name))
          else:
            print('::set-output name=is_valid_branch_name::' + str(is_valid_branch_name))
      - name: check linked issues
        uses: nearform/github-action-check-linked-issues@v1
        id: check-linked-issues
        if: ${{ steps.branch.outputs.is_valid_branch_name == 'false' }}
        with:
          exclude-branches: "release_v/**, backport_v/**, main, latest-dep-update-/**, min-dep-update-/**"\
