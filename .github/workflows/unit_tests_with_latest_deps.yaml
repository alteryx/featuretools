name: Unit Tests - Latest Dependencies
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  unit_tests:
    name: ${{ matrix.python_version }} unit tests ${{ matrix.libraries }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.8", "3.9", "3.10"]
        libraries: ["spark"]

    steps:
      - name: Set up python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Build featuretools package
        run: make package_featuretools
      - name: Set up pip and graphviz
        run: |
          pip config --site set global.progress_bar off
          python -m pip install --upgrade pip
          sudo apt update && sudo apt install -y graphviz
      - if: ${{ matrix.libraries != 'spark' }}
        name: Install featuretools with test requirements
        run: |
          python -m pip install -e unpacked_sdist/
          python -m pip install -e unpacked_sdist/[test]
      - if: ${{ matrix.libraries == 'spark' }}
        name: Install spark pkg, featuretools with test requirements and spark requirements
        run: |
          sudo apt install -y openjdk-11-jre-headless
          JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
          python -m pip install -e unpacked_sdist/[spark]
          python -m pip install -e unpacked_sdist/[test]
      - name: Run doc tests (no code coverage)
        run: |
          cd unpacked_sdist
          pytest featuretools/ --ignore featuretools/tests/ -n 2
      - name: Run cli tests
        run: pytest featuretools/tests/cli_tests -n 2
      - name: Run computational_backend tests
        run: pytest featuretools/tests/computational_backend -n 2
      - name: Run config_tests
        run: pytest featuretools/tests/config_tests -n 2
      - name: Run demo_tests
        run: pytest featuretools/tests/demo_tests -n 2
      - name: Run entityset_tests
        run: pytest featuretools/tests/entityset_tests -n 2
      - name: Run entry_point_tests
        run: pytest featuretools/tests/entry_point_tests -n 2
      - name: Run primitive_tests
        run: pytest featuretools/tests/primitive_tests -n 2
      - name: Run selection tests
        run: pytest featuretools/tests/selection -n 2
      - name: Run synthesis
        run: pytest featuretools/tests/synthesis -n 2
      - name: Run utils tests
        run: pytest featuretools/tests/utils_tests -n 2
