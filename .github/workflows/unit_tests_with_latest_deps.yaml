name: Unit Tests - Latest Dependencies
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  unit_tests:
    name: ${{ matrix.python_version }} unit tests ${{ matrix.libraries }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.10"]
        tests: ["misc", "computational", "entityset_1", "entityset_2", "primitives"]

    steps:
      - name: Set up python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Build featuretools package
        run: make package_featuretools
      - name: Set up pip and graphviz
        run: |
          pip config --site set global.progress_bar off
          python -m pip install --upgrade pip
          sudo apt update && sudo apt install -y graphviz
      - name: Install spark pkg, featuretools with test requirements and spark requirements
        run: |
          sudo apt install -y openjdk-11-jre-headless
          JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
          python -m pip install unpacked_sdist/[spark]
          python -m pip install unpacked_sdist/[test]
          cd unpacked_sdist
      - if: ${{ matrix.tests == 'misc' }}
        name: Run miscellaneious tests
        run: pytest featuretools/ -n=2 --ignore=featuretools/tests/computational_backend --ignore=featuretools/tests/entityset_tests --ignore=featuretools/tests/primitive_tests
      - if: ${{ matrix.tests == 'computational' }}
        name: Run computational backend tests
        run: pytest featuretools/tests/computational_backend/ -n=2
      - if: ${{ matrix.tests == 'entityset_1' }}
        name: Run first batch of entityset tests
        run: pytest featuretools/tests/entityset_tests -n=2 --ignore=featuretools/tests/entityset_tests/test_es.py --ignore=featuretools/tests/entityset_tests/test_ww_es.py
      - if: ${{ matrix.tests == 'entityset_2' }}
        name: Run second batch of entityset tests
        run: pytest featuretools/tests/entityset_tests/test_es.py featuretools/tests/entityset_tests/test_ww_es.py -n=2
      - if: ${{ matrix.tests == 'primitives' }}
        name: Run primitive tests
        run: pytest featuretools/tests/primitive_tests -n=2
